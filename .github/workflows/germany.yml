# This is a basic workflow to help you get started with Actions

name: Germany

# Controls when the workflow will run
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 1 * * *'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        run: |
          gh release create $(date -I)_test --title "Maps from $(date -I)" --notes "Automatically Processed Maps  || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  convert_maps:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #subregion: ['baden-wuerttemberg', 'bayern', 'berlin', 'brandenburg', 'bremen', 'hamburg', 'hessen', 'mecklenburg-vorpommern', 'niedersachsen', 'nordrhein-westfalen', 'rheinland-pfalz', 'saarland', 'sachsen', 'sachsen-anhalt', 'schleswig-holstein', 'thueringen']
        subregion: ['bremen', 'hamburg']

    # Steps represent a sequence of tasks that will be executed as part of the job
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup maptool
        run: |
          #TODO: replace with "gh release download -R navit-gps/navit --pattern '*linux*sh'" once uploaded
          wget "https://23361-30791823-gh.circle-artifacts.com/0/linux/_CPack_Packages/Linux/STGZ/navit.sh"
          chmod +x navit.sh
          mkdir navit
          ./navit.sh --skip-license --prefix=navit
      - name: Download ${{ matrix.subregion }}
        run: |
          wget https://download.geofabrik.de/europe/germany/${{ matrix.subregion }}-latest.osm.pbf

      - name: Build map for ${{ matrix.subregion }}
        run: |
          ./navit/bin/maptool --64bit --protobuf --slice-size 6442450944 -i ${{ matrix.subregion }}-latest.osm.pbf germany-${{ matrix.subregion }}-$(date -I).bin
          
      - name: Upload Artifact
        run: |
          gh release upload $(date -I) germany-${{ matrix.subregion }}-$(date -I).bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  post:
    runs-on: ubuntu-latest
    needs: convert_maps
    steps:
      - uses: actions/checkout@v2
      - name: Publish Release
        run: |
          #gh release create $(date -I)_test || true
          hub release edit --draft=false $(date -I)_test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
